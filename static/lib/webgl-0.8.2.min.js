/*!
* @license EaselJS
* Visit http://createjs.com/ for documentation, updates and examples.
*
* Copyright (c) 2011-2015 gskinner.com, inc.
*
* Distributed under the terms of the MIT license.
* http://www.opensource.org/licenses/mit-license.html
*
* This notice shall be included in all copies or substantial portions of the Software.
*/
this.createjs=this.createjs||{},function(){"use strict";function a(){if(this.Container_constructor(),console){var a="Deprecated, use a regular createjs.Container";console.warn?console.warn(a):console.log(a)}}var b=createjs.extend(a,createjs.Container);b.toString=function(){return"[SpriteContainer (name="+this.name+")]"},createjs.SpriteContainer=createjs.promote(a,"Container")}(),this.createjs=this.createjs||{},function(){"use strict";function a(b,c,d){this.Stage_constructor(b),this.vocalDebug=!1,this._preserveDrawingBuffer=c||!1,this._antialias=d||!1,this._viewportWidth=0,this._viewportHeight=0,this._projectionMatrix=null,this._webGLContext=null,this._clearColor={r:0,g:0,b:0,a:0},this._maxCardsPerBatch=a.DEFAULT_MAX_BATCH_SIZE,this._activeShader=null,this._vertices=null,this._vertexPositionBuffer=null,this._uvs=null,this._uvPositionBuffer=null,this._indecies=null,this._textureIndexBuffer=null,this._alphas=null,this._alphaBuffer=null,this._textureDictionary=[],this._textureIDs={},this._batchTextures=[],this._batchTextureCount=8,this._lastTextureInsert=-1,this._lastTextureID=-1,this._batchID=0,this._drawID=0,this._isDrawing=0,this._lastTrackedCanvas=0,this.isCacheControlled=!1,this._cacheContainer=new createjs.Container,this._initializeWebGL()}var b=createjs.extend(a,createjs.Stage);a.VERTEX_PROPERTY_COUNT=6,a.INDICIES_PER_CARD=6,a.DEFAULT_MAX_BATCH_SIZE=8e3,a.WEBGL_MAX_INDEX_NUM=Math.pow(2,16),a.UV_RECT={t:0,l:0,b:1,r:1},a.COVER_UV=new Float32Array([0,0,1,0,0,1,1,0,1,1,0,1]),a.COVER_UV_FLIP=new Float32Array([0,1,1,1,0,0,1,1,1,0,0,0]),a.COVER_VERT=new Float32Array([-1,1,1,1,-1,-1,1,1,1,-1,-1,-1]),a.SHADER_VARYING_HEADER="precision mediump float;varying vec2 vTextureCoord;varying lowp float indexPicker;varying lowp float alphaValue;",a.SHADER_VERTEX_HEADER=a.SHADER_VARYING_HEADER+"attribute vec2 vertexPosition;attribute vec2 uvPosition;attribute lowp float textureIndex;attribute lowp float objectAlpha;uniform mat4 pMatrix;",a.SHADER_FRAGMENT_HEADER=a.SHADER_VARYING_HEADER+"uniform sampler2D uSampler[{{count}}];",a.SHADER_VERTEX_BODY_REGULAR="void main(void) {gl_Position = vec4((vertexPosition.x * pMatrix[0][0]) + pMatrix[3][0],(vertexPosition.y * pMatrix[1][1]) + pMatrix[3][1],pMatrix[3][2],1.0);alphaValue = objectAlpha;indexPicker = textureIndex;vTextureCoord = uvPosition;}",a.SHADER_FRAGMENT_BODY_REGULAR="void main(void) {int src = int(indexPicker);vec4 color = vec4(1.0, 0.0, 0.0, 1.0);if(src == 0) {color = texture2D(uSampler[0], vTextureCoord);{{alternates}}}gl_FragColor = vec4(color.rgb, color.a * alphaValue);}",a.SHADER_VERTEX_BODY_PARTICLE=a.SHADER_VERTEX_BODY_REGULAR,a.SHADER_FRAGMENT_BODY_PARTICLE=a.SHADER_FRAGMENT_BODY_REGULAR,a.COVER_VARYING_HEADER="precision mediump float;varying highp vec2 vTextureCoord;",a.COVER_VERTEX_HEADER=a.COVER_VARYING_HEADER+"attribute vec2 vertexPosition;attribute vec2 uvPosition;",a.COVER_FRAGMENT_HEADER=a.COVER_VARYING_HEADER+"uniform sampler2D uSampler;",a.COVER_VERTEX_BODY_REGULAR="void main(void) {gl_Position = vec4(vertexPosition.x, vertexPosition.y, 0.0, 1.0);vTextureCoord = uvPosition;}",a.COVER_FRAGMENT_BODY_REGULAR="void main(void) {vec4 color = texture2D(uSampler, vTextureCoord);gl_FragColor = color;}",b._get_isWebGL=function(){return!!this._webGLContext},b._get_contextWebGL=function(){return this._webGLContext};try{Object.defineProperties(b,{isWebGL:{get:b._get_isWebGL}})}catch(c){}b._initializeWebGL=function(){return this.canvas?this._webGLContext&&this._webGLContext.canvas===this.canvas||this._createWebGL():this._webGLContext=null,this._webGLContext},b._createWebGL=function(){var a={alpha:!1,stencil:!0,antialias:this._antialias,preserveDrawingBuffer:this._preserveDrawingBuffer,premultipliedAlpha:!0},b=this._webGLContext=this._fetchWebGLContext(this.canvas,a);this.updateSimultaneousTextureCount(b.getParameter(b.MAX_TEXTURE_IMAGE_UNITS)),this._createBuffers(b),this._initTextures(b),b.enable(b.BLEND),b.blendFuncSeparate(b.SRC_ALPHA,b.ONE_MINUS_SRC_ALPHA,b.ONE,b.ONE_MINUS_SRC_ALPHA),b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),this.updateViewport(this._viewportWidth||this.canvas.width,this._viewportHeight||this.canvas.height)},b.update=function(a){if(this.canvas){if(this.tickOnUpdate&&this.tick(a),this.dispatchEvent("drawstart"),this._webGLContext)this._batchDraw(this,this._webGLContext);else{this.autoClear&&this.clear();var b=this.canvas.getContext("2d");b.save(),this.updateContext(b),this.draw(b,!1),b.restore()}this.dispatchEvent("drawend")}},b.clear=function(){if(this.canvas)if(this.isWebGLActive(this._webGLContext)){var a=this._webGLContext;a.clear(a.COLOR_BUFFER_BIT)}else{var b=this.canvas.getContext("2d");b.setTransform(1,0,0,1,0,0),b.clearRect(0,0,this.canvas.width+1,this.canvas.height+1)}},b.isWebGLActive=function(a){return a&&a instanceof WebGLRenderingContext&&"undefined"!=typeof WebGLRenderingContext},b.draw=function(a,b){return this.isWebGLActive(a)?(this._batchDraw(this,a,b),!0):this.Stage_draw(a,b)},b.cacheDraw=function(a,b){var c=this._webGLContext;this._shaderBackup=this._activeShader;var d=a.getMatrix();d=d.clone().invert();var e=this._cacheContainer;e.children=[a],e.transformMatrix=d;var f=b.length;if(f){c.activeTexture(c.TEXTURE0+(this._batchTextureCount-1));var g=this.getRenderBufferTexture(a._cacheWidth,a._cacheHeight);c.bindFramebuffer(c.FRAMEBUFFER,g._frameBuffer),this._batchDraw(e,c,!0),c.activeTexture(c.TEXTURE0),c.bindTexture(c.TEXTURE_2D,g),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST);for(var h=!1,i=0;f>i;i++){var j=b[i];c.activeTexture(c.TEXTURE0+(this._batchTextureCount-1)),g=this.getRenderBufferTexture(a._cacheWidth,a._cacheHeight),c.bindFramebuffer(c.FRAMEBUFFER,g._frameBuffer),this._activeShader=this.getFilterShader(c,j),this._activeShader&&(this._drawCover(c,h),c.activeTexture(c.TEXTURE0),c.bindTexture(c.TEXTURE_2D,g),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST),f>1&&(h=!h))}this.isCacheControlled?(c.bindFramebuffer(c.FRAMEBUFFER,null),this._activeShader=this.getFilterShader(c,null),this._drawCover(c,h)):(h&&(c.activeTexture(c.TEXTURE0+(this._batchTextureCount-1)),g=this.getRenderBufferTexture(a._cacheWidth,a._cacheHeight),c.bindFramebuffer(c.FRAMEBUFFER,g._frameBuffer),this._activeShader=this.getFilterShader(c,null),this._drawCover(c,!h)),c.bindFramebuffer(c.FRAMEBUFFER,null),a.cacheCanvas=g)}else if(this.isCacheControlled)this._batchDraw(e,c,!0);else{c.activeTexture(c.TEXTURE0+(this._batchTextureCount-1));var g=this.getRenderBufferTexture(a._cacheWidth,a._cacheHeight);c.bindFramebuffer(c.FRAMEBUFFER,g._frameBuffer),this._batchDraw(e,c,!0),c.bindFramebuffer(c.FRAMEBUFFER,null),a.cacheCanvas=g}this._activeShader=this._shaderBackup},b.updateSimultaneousTextureCount=function(a){var b=this._webGLContext,c=!1;for(this._batchTextureCount=a,this._batchTextureCount<1&&(this._batchTextureCount=1);!c;)try{this._activeShader=this._fetchShaderProgram(b),c=!0}catch(d){if(1==this._batchTextureCount)throw"Cannot compile shader "+d;this._batchTextureCount-=4,this._batchTextureCount<1&&(this._batchTextureCount=1),this.vocalDebug&&console.log("Reducing desired texture count due to errors: "+this._batchTextureCount)}},b.updateViewport=function(a,b){this._viewportWidth=a,this._viewportHeight=b;var c=this._webGLContext;c&&(c.viewport(0,0,this._viewportWidth,this._viewportHeight),this._projectionMatrix=new Float32Array([2/a,0,0,0,0,-2/b,1,0,0,0,1,0,-1,1,.1,0]))},b.getFilterShader=function(a,b){b=b||{};var c=this._activeShader;return c=this._fetchShaderProgram(a,"custom",b.VTX_SHADER_BODY,b.FRAG_SHADER_BODY,b.shaderParamSetup&&b.shaderParamSetup.bind(b))},b.clearImageTexture=function(a){a.__easeljs_texture=null},b.toString=function(){return"[SpriteStage (name="+this.name+")]"},b.getBaseTexture=function(a,b,c){var d=a||1,e=b||1;void 0===c&&(c=new Uint8Array([.1,.2,.3,1]));var f=this._webGLContext,g=f.createTexture();return f.bindTexture(f.TEXTURE_2D,g),f.texImage2D(f.TEXTURE_2D,0,f.RGBA,d,e,0,f.RGBA,f.UNSIGNED_BYTE,c),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_S,f.CLAMP_TO_EDGE),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_T,f.CLAMP_TO_EDGE),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MIN_FILTER,f.NEAREST),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MAG_FILTER,f.NEAREST),g},b.getRenderBufferTexture=function(a,b){var c=this._webGLContext,d=this.getBaseTexture(a,b,null);d.width=a,d.height=b;var e=c.createFramebuffer();return c.bindFramebuffer(c.FRAMEBUFFER,e),c.framebufferTexture2D(c.FRAMEBUFFER,c.COLOR_ATTACHMENT0,c.TEXTURE_2D,d,0),e._renderTexture=d,d._frameBuffer=e,d._storeID=-1,c.bindFramebuffer(c.FRAMEBUFFER,null),d},b.buildUVRects=function(a,b,c){if(!a||!a._frames)return result;void 0===b&&(b=-1),void 0===c&&(c=!1);for(var d=-1!=b&&c?b:0,e=-1!=b&&c?b+1:a._frames.length,f=d;e>f;f++){var g=a._frames[f];if(!g.uvRect&&!(g.image.width<=0||g.image.height<=0)){var h=g.rect;g.uvRect={t:h.y/g.image.height,l:h.x/g.image.width,b:(h.y+h.height)/g.image.height,r:(h.x+h.width)/g.image.width}}}return a._frames[-1!=b?b:0].uvRect||{t:0,l:0,b:1,r:1}},b._fetchWebGLContext=function(a,b){var c;try{c=a.getContext("webgl",b)||a.getContext("experimental-webgl",b)}catch(d){}return c?(c.viewportWidth=a.width,c.viewportHeight=a.height):alert("Could not initialize WebGL"),c},b._fetchShaderProgram=function(b,c,d,e,f){b.useProgram(null);var g,h;switch(c){case"custom":h=a.COVER_VERTEX_HEADER,g=a.COVER_FRAGMENT_HEADER,h+=d||a.COVER_VERTEX_BODY_REGULAR,g+=e||a.COVER_FRAGMENT_BODY_REGULAR;break;case"particle":h=a.SHADER_VERTEX_HEADER,g=a.SHADER_FRAGMENT_HEADER,h+=a.SHADER_VERTEX_BODY_PARTICLE,g+=a.SHADER_FRAGMENT_BODY_PARTICLE;break;default:h=a.SHADER_VERTEX_HEADER,g=a.SHADER_FRAGMENT_HEADER,h+=a.SHADER_VERTEX_BODY_REGULAR,g+=a.SHADER_FRAGMENT_BODY_REGULAR}var i=this._createShader(b,b.VERTEX_SHADER,h),j=this._createShader(b,b.FRAGMENT_SHADER,g),k=b.createProgram();if(b.attachShader(k,i),b.attachShader(k,j),b.linkProgram(k),!b.getProgramParameter(k,b.LINK_STATUS))throw b.useProgram(this._activeShader),b.getProgramInfoLog(k);switch(b.useProgram(k),c){case"custom":k.vertexPositionAttribute=b.getAttribLocation(k,"vertexPosition"),b.enableVertexAttribArray(k.vertexPositionAttribute),k.uvPositionAttribute=b.getAttribLocation(k,"uvPosition"),b.enableVertexAttribArray(k.uvPositionAttribute),k.samplerUniform=b.getUniformLocation(k,"uSampler"),b.uniform1i(k.samplerUniform,0),f&&f(b,this,k);break;case"particle":default:k.vertexPositionAttribute=b.getAttribLocation(k,"vertexPosition"),b.enableVertexAttribArray(k.vertexPositionAttribute),k.uvPositionAttribute=b.getAttribLocation(k,"uvPosition"),b.enableVertexAttribArray(k.uvPositionAttribute),k.textureIndexAttribute=b.getAttribLocation(k,"textureIndex"),b.enableVertexAttribArray(k.textureIndexAttribute),k.alphaAttribute=b.getAttribLocation(k,"objectAlpha"),b.enableVertexAttribArray(k.alphaAttribute);for(var l=[],m=0;m<this._batchTextureCount;m++)l[m]=m;k.pMatrixUniform=b.getUniformLocation(k,"pMatrix"),k.samplerData=l,k.samplerUniform=b.getUniformLocation(k,"uSampler"),b.uniform1iv(k.samplerUniform,l)}return b.useProgram(this._activeShader),k},b._createShader=function(a,b,c){c=c.replace("{{count}}",this._batchTextureCount);for(var d="",e=1;e<this._batchTextureCount;e++)d+="} else if(src == "+e+") { color = texture2D(uSampler["+e+"], vTextureCoord);";c=c.replace("{{alternates}}",d);var f=a.createShader(b);if(a.shaderSource(f,c),a.compileShader(f),!a.getShaderParameter(f,a.COMPILE_STATUS))throw a.getShaderInfoLog(f);return f},b._createBuffers=function(b){var c,d,e=this._maxCardsPerBatch*a.INDICIES_PER_CARD,f=this._vertexPositionBuffer=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f),c=2;var g=this._vertices=new Float32Array(e*c);for(d=0;d<g.length;d+=c)g[d+0]=g[d+1]=0;b.bufferData(b.ARRAY_BUFFER,g,b.DYNAMIC_DRAW),f.itemSize=c,f.numItems=e;var h=this._uvPositionBuffer=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,h),c=2;var i=this._uvs=new Float32Array(e*c);for(d=0;d<i.length;d+=c)i[d+0]=i[d+1]=0;b.bufferData(b.ARRAY_BUFFER,i,b.DYNAMIC_DRAW),h.itemSize=c,h.numItems=e;var j=this._textureIndexBuffer=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,j),c=1;var k=this._indecies=new Float32Array(e*c);for(d=0;d<k.length;d++)k[d]=0;b.bufferData(b.ARRAY_BUFFER,k,b.DYNAMIC_DRAW),j.itemSize=c,j.numItems=e;var l=this._alphaBuffer=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,l),c=1;var m=this._alphas=new Float32Array(e*c);for(d=0;d<m.length;d++)m[d]=1;b.bufferData(b.ARRAY_BUFFER,m,b.DYNAMIC_DRAW),l.itemSize=c,l.numItems=e},b._initTextures=function(a){this._lastTextureInsert=-1,this._lastTextureID=-1,this._textureDictionary=[],this._textureIDs={},this._batchTextures=[];for(var b=0;b<this._batchTextureCount;b++)this._batchTextures[b]=this.getBaseTexture()},b._loadTextureImage=function(a,b){var c=(++this._lastTextureID,b.src);c||(b._isCanvas=!0,c=b.src="canvas_"+this._lastTrackedCanvas++);var d=this._textureIDs[c];void 0===d&&(d=this._textureDictionary.length,this._textureIDs[c]=d),void 0===this._textureDictionary[d]&&(this._textureDictionary[d]=this.getBaseTexture());var e=this._textureDictionary[d];return e._batchID=this._batchID,e._storeID=d,e._imageData=b,this._insertTextureInBatch(a,e),b._storeID=d,b.complete||b.naturalWidth||b._isCanvas?this._updateTextureImageData(a,b):b.onload=this._updateTextureImageData.bind(this,a,b),e},b._updateTextureImageData=function(a,b){var c=this._textureDictionary[b._storeID];a.activeTexture(a.TEXTURE0+c._activeIndex),a.bindTexture(a.TEXTURE_2D,c),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),a.texImage2D(a.TEXTURE_2D,0,a.RGBA,a.RGBA,a.UNSIGNED_BYTE,b),c._w=b.width,c._h=b.height,this.vocalDebug&&((b.width&b.width-1||b.height&b.height-1)&&console.warn("NPOT(Non Power of Two) Texture: "+b.src),(b.width>a.MAX_TEXTURE_SIZE||b.height>a.MAX_TEXTURE_SIZE)&&console.error("Oversized Texture: "+b.width+"x"+b.height+" vs "+a.MAX_TEXTURE_SIZE+"max"))},b._batchDraw=function(a,b,c){this._isDrawing>0&&this._drawToGPU(b),this._isDrawing++,this._drawID++,this.batchCardCount=0,this.depth=0;var d=new createjs.Matrix2D;this._appendToBatchGroup(a,b,d,1,c),this.batchReason="drawFinish",this._drawToGPU(b),this._isDrawing--},b._drawCover=function(b,c){this._isDrawing>0&&this._drawToGPU(b),this.vocalDebug&&console.log("Draw["+this._drawID+":"+this._batchID+"] : Cover");var d=this._activeShader,e=this._vertexPositionBuffer,f=this._uvPositionBuffer;b.clear(b.COLOR_BUFFER_BIT),b.useProgram(d),b.bindBuffer(b.ARRAY_BUFFER,e),b.vertexAttribPointer(d.vertexPositionAttribute,e.itemSize,b.FLOAT,!1,0,0),b.bufferSubData(b.ARRAY_BUFFER,0,a.COVER_VERT),b.bindBuffer(b.ARRAY_BUFFER,f),b.vertexAttribPointer(d.uvPositionAttribute,f.itemSize,b.FLOAT,!1,0,0),b.bufferSubData(b.ARRAY_BUFFER,0,c?a.COVER_UV_FLIP:a.COVER_UV),b.uniform1i(d.samplerUniform,0),b.drawArrays(b.TRIANGLES,0,a.INDICIES_PER_CARD)},b._appendToBatchGroup=function(b,c,d,e,f){b._glMtx||(b._glMtx=new createjs.Matrix2D);var g=b._glMtx;g.copy(d),b.transformMatrix?g.appendMatrix(b.transformMatrix):g.appendTransform(b.x,b.y,b.scaleX,b.scaleY,b.rotation,b.skewX,b.skewY,b.regX,b.regY);for(var h,i,j,k,l=0,m=b.children.length;m>l;l++){var n=b.children[l];if(n.visible&&e)if(n.cacheCanvas&&!f||(3===n._webGLRenderStyle&&n._updateText(),!n.children)){this.batchCardCount+1>this._maxCardsPerBatch&&(this.batchReason="vertexOverflow",this._drawToGPU(c),this.batchCardCount=0),n._glMtx||(n._glMtx=new createjs.Matrix2D);var o=n._glMtx;o.copy(g),n.transformMatrix?o.appendMatrix(n.transformMatrix):o.appendTransform(n.x,n.y,n.scaleX,n.scaleY,n.rotation,n.skewX,n.skewY,n.regX,n.regY);var p,q,r=this._uvs,s=this._vertices,t=this._indecies,u=this._alphas,v=this.batchCardCount*a.INDICIES_PER_CARD*2,w=v/2|0;if(2===n._webGLRenderStyle||n.cacheCanvas&&!f){var x,y=(f?!1:n.cacheCanvas)||n.image;if(void 0===y._storeID?(x=this._loadTextureImage(c,y),this._insertTextureInBatch(c,x)):(x=y._storeID<0?y:this._textureDictionary[y._storeID],x._batchID!==this._batchID&&this._insertTextureInBatch(c,x)),q=x._activeIndex,n.sourceRect){n._uvRect||(n._uvRect={});var z=n.sourceRect;p=n._uvRect,p.t=z.x/y.width,p.l=z.y/y.height,p.b=(z.x+z.width)/y.width,p.r=(z.y+z.height)/y.height,h=-n.regX,i=-n.regY,j=z.width+h,k=z.height+i}else n.cacheCanvas?(p=a.UV_RECT,h=n._cacheOffsetX,i=n._cacheOffsetY):(p=a.UV_RECT,h=-n.regX,i=-n.regY),j=y.width+h,k=y.height+i}else{if(1!==n._webGLRenderStyle)continue;var A=n.spriteSheet.getFrame(n.currentFrame),B=A.rect,y=A.image;p=A.uvRect,p||(p=this.buildUVRects(n.spriteSheet,n.currentFrame,!1));var x;void 0===y._storeID?(x=this._loadTextureImage(c,y),this._insertTextureInBatch(c,x)):(x=y._storeID<0?y:this._textureDictionary[y._storeID],x._batchID!==this._batchID&&this._insertTextureInBatch(c,x)),q=x._activeIndex,h=-A.regX,i=-A.regY,j=B.width-A.regX,k=B.height-A.regY}s[v]=h*o.a+i*o.c+o.tx,s[v+1]=h*o.b+i*o.d+o.ty,s[v+2]=h*o.a+k*o.c+o.tx,s[v+3]=h*o.b+k*o.d+o.ty,s[v+4]=j*o.a+i*o.c+o.tx,s[v+5]=j*o.b+i*o.d+o.ty,s[v+6]=h*o.a+k*o.c+o.tx,s[v+7]=h*o.b+k*o.d+o.ty,s[v+8]=j*o.a+i*o.c+o.tx,s[v+9]=j*o.b+i*o.d+o.ty,s[v+10]=j*o.a+k*o.c+o.tx,s[v+11]=j*o.b+k*o.d+o.ty,r[v]=p.l,r[v+1]=p.t,r[v+2]=p.l,r[v+3]=p.b,r[v+4]=p.r,r[v+5]=p.t,r[v+6]=p.l,r[v+7]=p.b,r[v+8]=p.r,r[v+9]=p.t,r[v+10]=p.r,r[v+11]=p.b,t[w]=t[w+1]=t[w+2]=t[w+3]=t[w+4]=t[w+5]=q,u[w]=u[w+1]=u[w+2]=u[w+3]=u[w+4]=u[w+5]=n.alpha*e,this.batchCardCount++}else this._appendToBatchGroup(n,c,g,n.alpha*e)}},b._drawToGPU=function(b){this.vocalDebug&&console.log("Draw["+this._drawID+":"+this._batchID+"] : "+this.batchReason);var c=this._activeShader,d=this._vertexPositionBuffer,e=this._textureIndexBuffer,f=this._uvPositionBuffer,g=this._alphaBuffer;b.useProgram(c),b.bindBuffer(b.ARRAY_BUFFER,d),b.vertexAttribPointer(c.vertexPositionAttribute,d.itemSize,b.FLOAT,!1,0,0),b.bufferSubData(b.ARRAY_BUFFER,0,this._vertices),b.bindBuffer(b.ARRAY_BUFFER,e),b.vertexAttribPointer(c.textureIndexAttribute,e.itemSize,b.FLOAT,!1,0,0),b.bufferSubData(b.ARRAY_BUFFER,0,this._indecies),b.bindBuffer(b.ARRAY_BUFFER,f),b.vertexAttribPointer(c.uvPositionAttribute,f.itemSize,b.FLOAT,!1,0,0),b.bufferSubData(b.ARRAY_BUFFER,0,this._uvs),b.bindBuffer(b.ARRAY_BUFFER,g),b.vertexAttribPointer(c.alphaAttribute,g.itemSize,b.FLOAT,!1,0,0),b.bufferSubData(b.ARRAY_BUFFER,0,this._alphas),b.uniformMatrix4fv(c.pMatrixUniform,b.FALSE,this._projectionMatrix);for(var h=0;h<this._batchTextureCount;h++){var i=this._batchTextures[h];b.activeTexture(b.TEXTURE0+h),b.bindTexture(b.TEXTURE_2D,i),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE)}b.drawArrays(b.TRIANGLES,0,this.batchCardCount*a.INDICIES_PER_CARD),this._batchID++},b._insertTextureInBatch=function(a,b){if(this._batchTextures[b._activeIndex]!==b){var c=-1,d=(this._lastTextureInsert+1)%this._batchTextureCount,e=d;do{if(this._batchTextures[e]._batchID!=this._batchID){c=e;break}e=(e+1)%this._batchTextureCount}while(e!==d);-1===c&&(this.batchReason="textureOverflow",this._drawToGPU(a),this.batchCardCount=0,c=d),this._batchTextures[c]=b,b._activeIndex=c,a.activeTexture(a.TEXTURE0+c),a.bindTexture(a.TEXTURE_2D,b),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),this._lastTextureInsert=c}else{var f=b._imageData;f._invalid&&this._updateTextureImageData(a,f)}b._drawID=this._drawID,b._batchID=this._batchID},function(){var a=[createjs.Sprite,createjs.Bitmap,createjs.BitmapText,createjs.DOMElement];a.forEach(function(a,b){a.prototype._webGLRenderStyle=b+1})}(),createjs.SpriteStage=createjs.promote(a,"Stage")}();